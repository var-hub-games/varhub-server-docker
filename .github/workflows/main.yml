name: Build and deploy

on:
  workflow_dispatch:
   inputs:
     cleanup:
       type: boolean
       required: false
  repository_dispatch:
    types: [varhub-core, varhub-commutator]

jobs:
  buildDockerTawServer:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ghcr.io
      CONTAINER_IMAGE_LATEST: var-hub-games/varhub-server-docker
      NODE_AUTH_TOKEN: ${{secrets.PACKAGES_TOKEN}}
    steps:
      - name: "[Common] Cleanup"
        if: ${{ inputs.cleanup == 'true' }}
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}/*"
          
      - name: "[Common] Install Node and yarn"
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@var-hub-games'
      - run: npm install -g yarn  
          
          
      - name: "[Common] Checkout self"
        uses: actions/checkout@v2
        
        
      - name: "[CORE] Checkout"
        uses: actions/checkout@v2
        with: 
          repository: var-hub-games/varhub-core
          path: ./varhub-core
          ref: refs/heads/master
     
      - name: "[CORE] Install deps"
        run: yarn install
        working-directory: ./varhub-core
        
      - name: "[CORE] Build"
        run: yarn run build
        working-directory: ./connector

      - name: "[Docker] Log in to the Container registry"
        uses: docker/login-action@master
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "[Docker] Extract metadata (tags, labels)"
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.CONTAINER_IMAGE_LATEST }}

      - name: "[Docker] Build and push Docker image"
        uses: docker/build-push-action@master
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
